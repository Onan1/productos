@model OP.SysProductos.EN.Venta
@using System.Text.Json
@{
    Layout = "_Layout";
}

<h2>Registrar Venta</h2>

<form method="post">
    <div class="form-group">
        <label for="ClienteId">Cliente:</label>
        @Html.DropDownListFor(
                 model => model.IdCliente,
                 ViewBag.Clientes as SelectList ?? new SelectList(Enumerable.Empty<SelectListItem>()),
                 "Seleccione un cliente",
                 new { @class = "form-control" })
    </div>

    <div class="form-group">
        <label for="FechaVenta">Fecha de Venta:</label>
        <input type="date" class="form-control" id="FechaVenta" name="FechaVenta" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
    </div>

    <h4>Productos</h4>
    <table class="table" id="productosTable">
        <thead>
            <tr>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Precio</th>
                <th>Subtotal</th>
                <th>Acción</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <select class="form-control" name="DetalleVentas[0].ProductoId" id="ProductoId_0" onchange="updatePrice(0)">
                        <option value="">Seleccione un producto</option>
                        @foreach (var producto in (List<OP.SysProductos.EN.Producto>)ViewBag.Productos)
                        {
                            <option value="@producto.Id">@producto.Nombre</option>
                        }
                    </select>
                </td>
                <td>
                    <input type="number" class="form-control" name="DetalleVentas[0].Cantidad" id="Cantidad_0" min="1" oninput="updateSubtotal(0)" />
                </td>
                <td>
                    <input type="text" class="form-control" name="DetalleVentas[0].Precio" id="Precio_0" readonly />
                </td>
                <td>
                    <input type="text" class="form-control" name="DetalleVentas[0].SubTotal" id="SubTotal_0" readonly />
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="removeRow(this)">Eliminar</button>
                </td>
            </tr>
        </tbody>
    </table>

    <button type="button" class="btn btn-primary" onclick="addRow()">Añadir Producto</button>

    <div class="form-group mt-3">
        <strong>Total Cantidad:</strong> <span id="totalCantidad">0</span><br />
        <strong>Total Venta:</strong> <span id="totalSubTotal">0.00</span>
    </div>

    <div class="form-group mt-3">
        <button type="submit" class="btn btn-success">Registrar Venta</button>
    </div>
</form>

@section Scripts {
    <script>
        const productos = @Html.Raw(JsonSerializer.Serialize(ViewBag.Productos));

        function addRow() {
            const table = document.getElementById("productosTable").getElementsByTagName('tbody')[0];
            const rowCount = table.rows.length;

            const newRow = table.insertRow();
            newRow.innerHTML = `
                <td>
                    <select class="form-control" name="DetalleVentas[${rowCount}].ProductoId" id="ProductoId_${rowCount}" onchange="updatePrice(${rowCount})">
                        <option value="">Seleccione un producto</option>
                        ${productos.map(p => `<option value="${p.Id}">${p.Nombre}</option>`).join('')}
                    </select>
                </td>
                <td>
                    <input type="number" class="form-control" name="DetalleVentas[${rowCount}].Cantidad" id="Cantidad_${rowCount}" min="1" oninput="updateSubtotal(${rowCount})" />
                </td>
                <td>
                    <input type="text" class="form-control" name="DetalleVentas[${rowCount}].Precio" id="Precio_${rowCount}" readonly />
                </td>
                <td>
                    <input type="text" class="form-control" name="DetalleVentas[${rowCount}].SubTotal" id="SubTotal_${rowCount}" readonly />
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="removeRow(this)">Eliminar</button>
                </td>
            `;
        }

        function removeRow(button) {
            const row = button.closest('tr');
            row.remove();
            calculateTotals();
        }

        function updatePrice(row) {
            const productoId = document.getElementById(`ProductoId_${row}`).value;
            const producto = productos.find(p => p.Id == productoId);
            document.getElementById(`Precio_${row}`).value = producto ? producto.Precio : '';
            updateSubtotal(row);
        }

        function updateSubtotal(row) {
            const precio = parseFloat(document.getElementById(`Precio_${row}`).value) || 0;
            const cantidad = parseInt(document.getElementById(`Cantidad_${row}`).value) || 0;
            const subtotal = precio * cantidad;
            document.getElementById(`SubTotal_${row}`).value = subtotal.toFixed(2);
            calculateTotals();
        }

        function calculateTotals() {
            let totalCantidad = 0;
            let totalSubTotal = 0;
            const table = document.getElementById("productosTable").getElementsByTagName('tbody')[0];

            for (let i = 0; i < table.rows.length; i++) {
                const cantidad = parseInt(table.rows[i].querySelector(`#Cantidad_${i}`)?.value || 0);
                const subtotal = parseFloat(table.rows[i].querySelector(`#SubTotal_${i}`)?.value || 0);
                totalCantidad += cantidad;
                totalSubTotal += subtotal;
            }

            document.getElementById("totalCantidad").innerText = totalCantidad;
            document.getElementById("totalSubTotal").innerText = totalSubTotal.toFixed(2);
        }
    </script>
}

